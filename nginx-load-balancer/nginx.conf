upstream backend {
    server backend:8080;    # Der Service-Name des Backends
}

upstream message-service{
    ip_hash;
    server message-service:8081;    # Der Service-Name des Backends
}

server {
    listen 80;

    resolver 127.0.0.11 valid=5s;  # Docker interner DNS-Resolver

    include /etc/nginx/mime.types;

    location /backend {
        proxy_pass http://backend/; # Proxy-Anfragen an den Backend-Service
    }
    location /ws {
        proxy_pass http://message-service/;          # Adresse des WebSocket-Backends
        proxy_http_version 1.1;                     # WebSocket benötigt HTTP/1.1
        proxy_set_header Upgrade $http_upgrade;     # Upgrade-Header für WebSocket
        proxy_set_header Connection "Upgrade";      # Verbindung auf "Upgrade" setzen
        proxy_set_header Host $host;                # Weiterleitung des Host-Headers
        proxy_set_header X-Real-IP $remote_addr;    # Optional: Client-IP weiterleiten
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Für Debugging
        proxy_buffering off;                        # WebSocket benötigt keine Pufferung
        proxy_read_timeout 3600;                    # Timeout für lange Verbindungen erhöhen
        proxy_send_timeout 3600;                    # Timeout für lange Verbindungen erhöhen
    }
}